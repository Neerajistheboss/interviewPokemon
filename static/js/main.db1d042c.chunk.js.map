{"version":3,"sources":["logo.svg","Components/PokeCard.js","Pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["PokeCard","pokemon","name","id","images","hp","attacks","abilities","attackString","map","attack","toString","abilityString","ability","className","style","borderRadius","padding","height","backgroundColor","src","small","width","fontWeight","fontSize","display","justifyContent","HomePage","count","totalCount","useState","pokemonList","setPokemonList","totalPokemonRecieved","page","setPage","size","checkBottom","window","innerHeight","scrollY","document","body","offsetHeight","console","log","useEffect","addEventListener","axios","get","then","response","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4NAAe,I,0BCsBAA,EArBA,SAAD,GAAe,IAAZC,EAAO,EAAPA,QACHC,GAAkCD,EAArCE,GAAqCF,EAAlCC,MAAKE,EAA6BH,EAA7BG,OAAOC,EAAsBJ,EAAtBI,GAAGC,EAAmBL,EAAnBK,QAAQC,EAAWN,EAAXM,UAC3BC,EAAoB,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASG,KAAI,SAAAC,GAAM,OAAEA,EAAOR,QAAMS,WAC/CC,EAAuB,OAATL,QAAS,IAATA,OAAS,EAATA,EAAWE,KAAI,SAAAI,GAAO,OAAEA,EAAQX,QAAMS,WAC1D,OACI,qBAAMG,UAAU,0CAAyC,SACrD,sBAAKA,UAAU,SAASC,MAAO,CAACC,aAAa,OAAOC,QAAQ,OAAOC,OAAO,OAAOC,gBAAgB,QAAQ,UAEzG,qBAAKC,IAAKhB,EAAOiB,MAAOP,UAAU,OAAOC,MAAO,CAACO,MAAM,SACvD,oBAAGR,UAAU,MAAMC,MAAO,CAACQ,WAAW,OAAOC,SAAS,OAAOC,QAAQ,OAAOC,eAAe,iBAAiB,UAAC,+BAAOxB,IAAY,uCAAUG,QAC1I,oBAAGS,UAAU,iBAAgB,UAAC,sBAAMC,MAAO,CAACQ,WAAW,OAAO,sBAAgB,uBACzEf,GAAc,QAEnB,oBAAGM,UAAU,iBAAgB,UAAC,sBAAMC,MAAO,CAACQ,WAAW,OAAO,wBAAkB,uBAC3EX,GAAe,c,iBCqCjBe,EA/CA,WACX,IACIC,EACAC,EAFJ,EAAmCC,mBAAS,IAAG,mBAAxCC,EAAW,KAACC,EAAc,KAG7BC,EAAqB,EACzB,EAAqBH,mBAAS,GAAE,mBAAzBI,EAAI,KAACC,EAAO,KACnB,EAAqBL,mBAAS,IAAG,mBAA1BM,EAAI,KAILC,GAJa,KAID,WACTC,OAAOC,YAAcD,OAAOE,SAAYC,SAASC,KAAKC,eAEvDV,IAAuBC,EAAK,GAAGE,EAAKR,EACpCgB,QAAQC,IAAIZ,GACTA,EAAqBJ,GACxBM,EAAQD,EAAK,MAqBrB,OAhBAY,qBAAU,WACNR,OAAOS,iBAAiB,SAASV,MAKrCS,qBAAU,WACNE,IAAMC,IAAI,2CAAD,OAA4Cf,EAAI,qBAAaE,IAChEc,MAAK,SAAAC,GACFnB,EAAe,GAAD,mBAAKD,GAAW,YAAIoB,EAASC,KAAKA,QAChDvB,EAAWsB,EAASC,KAAKvB,WACzBD,EAAMuB,EAASC,KAAKxB,WAG/B,CAACM,EAAKE,IAGJ,qBAAKtB,UAAU,OAAOC,MAAO,CAACI,gBAAgB,WAAW,SACrD,qBAAKL,UAAU,0BAAyB,SACvCiB,EAAYtB,KAAI,SAAAR,GAAO,OAAE,cAAC,EAAQ,CAACA,QAASA,YCjC1CoD,MARf,WACE,OACE,qBAAKvC,UAAU,MAAK,SACnB,cAAC,EAAQ,OCKCwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENvB,SAASwB,eAAe,SAM1BX,M","file":"static/js/main.db1d042c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\r\nconst PokeCard=({pokemon})=>{\r\n    const {id,name,images,hp,attacks,abilities}=pokemon\r\n    const attackString=attacks?.map(attack=>attack.name).toString()\r\n    const abilityString=abilities?.map(ability=>ability.name).toString()  \r\n    return(\r\n        <div  className='col-12 col-md-4 col-xl-3 px-5 py-2 mb-3'>\r\n            <div className='shadow' style={{borderRadius:'10px',padding:'10px',height:'100%',backgroundColor:'#FFF'}} >\r\n\r\n            <img src={images.small} className='mb-1' style={{width:'90%'}} />\r\n            <p className='m-0' style={{fontWeight:'bold',fontSize:'18px',display:'flex',justifyContent:'space-between'}}><span>{name}</span><span>HP:{hp}</span></p>\r\n            <p className='text-left mb-1'><span style={{fontWeight:'700'}}>Attacks:</span><br/>\r\n                {attackString||'NA'}\r\n            </p>\r\n            <p className='text-left mb-1'><span style={{fontWeight:'700'}}>Abilities:</span><br/>\r\n                {abilityString||'NA'}\r\n            </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeCard","import React, { useEffect, useState } from 'react'\r\nimport PokeCard from '../Components/PokeCard'\r\n\r\nimport axios from 'axios'\r\n\r\nconst HomePage=()=>{\r\n    const [pokemonList,setPokemonList]=useState([])\r\n    let count    //count of pokemon on particular page of api call\r\n    let totalCount   // total count of pokemon in database\r\n    let totalPokemonRecieved=0  //total pokemon data recieved\r\n    const [page,setPage]=useState(1)\r\n    const [size,setSize]=useState(10)\r\n    \r\n\r\n    //function to check whether bottom of page about to reach\r\n    const checkBottom=()=>{\r\n        if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\r\n            // bottom reached , increase page no. to fetch more data\r\n            totalPokemonRecieved+=(page-1)*size+count\r\n            console.log(totalPokemonRecieved)\r\n            if(totalPokemonRecieved<totalCount) // more pokemon data can be fetched , increase page number and fetch data again\r\n            setPage(page+1)  \r\n         }\r\n    }\r\n\r\n \r\n    useEffect(()=>{\r\n        window.addEventListener('scroll',checkBottom)\r\n    })\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n        axios.get(`https://api.pokemontcg.io/v2/cards?page=${page}&pageSize=${size}`)\r\n             .then(response=>{\r\n                 setPokemonList([...pokemonList,...response.data.data])\r\n                 totalCount=response.data.totalCount  //total count of pokemon in database\r\n                 count=response.data.count\r\n                })\r\n                \r\n    },[page,size]) // dependecy on page no. and size.\r\n\r\n    return(\r\n        <div className='px-5' style={{backgroundColor:'#67EDFF'}}>\r\n            <div className='row align-items-stretch'>\r\n            {pokemonList.map(pokemon=><PokeCard pokemon={pokemon}/>)}        \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HomePage","import logo from './logo.svg';\r\nimport './App.css';\r\nimport HomePage from './Pages/HomePage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <HomePage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}